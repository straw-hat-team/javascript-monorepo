import type { UseMutationOptions } from 'react-query';
import type { Fetcher } from '@straw-hat/fetcher';
import type { {{{typePrefix}}}Response, {{{typePrefix}}}Params } from '{{{importPath}}}';
import { useFetcherMutation } from '@straw-hat/react-query-fetcher';
import { {{{functionName}}} } from '{{{importPath}}}';

export type Use{{{pascalFunctionName}}}Variables = Omit<{{{typePrefix}}}Params, 'options'>;

export type Use{{{pascalFunctionName}}}Args<TError = unknown> = {
  options?: Omit<UseMutationOptions<{{{typePrefix}}}Response, TError, Use{{{pascalFunctionName}}}Variables>, 'mutationKey'>
};

const MUTATION_KEY = '{{{functionName}}}';

export function use{{{pascalFunctionName}}}<TError = unknown>(
  client: Fetcher,
  args: Use{{{pascalFunctionName}}}Args<TError>,
) {
  const options = args.options ?? {};
  return useFetcherMutation<{{{typePrefix}}}Response, TError, Use{{{pascalFunctionName}}}Variables>(client, {
    options: {
      ...options,
      mutationKey: MUTATION_KEY,
    },
    endpoint: {{{functionName}}},
  });
}
